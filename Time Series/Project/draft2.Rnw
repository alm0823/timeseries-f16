\documentclass[11pt]{article}
\usepackage{fullpage,graphicx,float,amsmath,enumitem,hyperref}
\setlist{parsep=5.5pt}
\setlength{\parindent}{0pt}
\setlength{\parskip}{\baselineskip}

\usepackage{fancyhdr}
\pagestyle{fancy}
\lhead{Time Series HW 8}
\rhead{Allison Theobold, Andrea Mack, and Kenny Flagg}
\setlength{\headheight}{18pt}
\setlength{\headsep}{2pt}

\title{Time Series HW 8}
\author{Allison Theobold, Andrea Mack, and Kenny Flagg}
\date{November 29, 2016}

\begin{document}
\maketitle

<<setup, echo = FALSE, message = FALSE, cache = FALSE>>=
library(knitr)
opts_chunk$set(echo = FALSE, comment = NA, fig.align = "center",
               fig.width = 6.5, fig.height = 4, fig.pos = "H",
               size = "footnotesize", dev = "pdf",
               dev.args = list(pointsize = 11))
knit_theme$set("print")

require(xtable)
require(TSA)
require(ggplot2)
options(xtable.table.placement = "H", xtable.caption.placement = "top",
        width = 80, scipen = 1, show.signif.stars = FALSE)
@


Volatility occurs when the conditional variance of a time series varies over time (CC, 279).

<<readin,include = FALSE>>=
oil <- read.csv("Cushing_OK_Crude_Oil_Future_Contract_1.csv")
colnames(oil) <- c("day", "price")
oil$day <- rev(oil$day)
oil$day <- as.character(oil$day)
head(oil$day)
tail(oil$day)


oil_sub <- oil[which(oil$day == "5/2/1983"):which(oil$day == "10/31/2016"),]
oil_sub$date <- as.Date(oil_sub$day, format = "%m/%d/%Y")

require(zoo)
oil_sub$yearmn <- as.yearmon(oil_sub$day, "%m/%d/%Y")
plot(oil_sub$price)
price_yearmn <- by(oil_sub$price, oil_sub$yearmn, mean)

oil_sub$r.price <- c(diff(log(oil_sub$price))*100,NA)
r.price_yearmn <- by(oil_sub$r.price, oil_sub$yearmn, mean)

ggplot(data = oil_sub, aes(x = time(date), y = price)) + geom_line() + ylab("Price in Dollars") + xlab("Date") + theme_bw() + theme(legend.position = "bottom")

ggplot(data = oil_sub, aes(x = time(date), y = log(price))) + geom_line() + ylab("Log Price in Dollars") + xlab("Date") + theme_bw() + theme(legend.position = "bottom")


acf(ts(data = price_yearmn))
pacf(ts(data = price_yearmn))

ggplot(data = oil_sub, aes(x = time(date), y = r.price)) + geom_line() + ylab("Return") + xlab("Date") + theme_bw() + theme(legend.position = "bottom")
@

The ACF and PACF of the daily returns both suggest statistically significant autocorrelation at lags 1, 4, and 5. 

<<assess.autocorr>>=

acf(ts(data = oil_sub$r.price[-8403]))
pacf(ts(data = oil_sub$r.price[-8403]))

acf(ts(data = (r.price_yearmn[-402])))
pacf(ts(data = (r.price_yearmn[-402])))


#+ scale_x_continuous(breaks = c(seq(0,80,by=13.33)), labels = c(seq(min(mex$year), max(mex$year), by = 1)))




######################################################
#df_counts <- data.frame(table(oil_sub$yearmn))
#colnames(df_counts)[1] <- "yearmn"

#fn_rep <- function(x){
  #for()
  #rep(price_yearmn, df_counts)
#}

#ifelse(oil_sub$yearmn %*%)

#oil_sub$pricemn <- c(rep(0,dim(oil_sub)[1]))
#out <- NULL
#for(i in 1:length(tb_counts)){
  #out[[i]] <- list(rep(price_yearmn[i], tb_counts[i]))
#}

#require(dplyr)
#install.packages("data.table")
#require(data.table)

#c(paste(out))
@

To determine whether observations are independent and identically distributed, versus just having correlated observations, look at the ACF and PACF of the absolute value of the responses (CC 281). There is strong evidence monthly log price returns are not independent and identically distributed. 

Idea: if lags in ts are independent, then independence will hold through (even) non-linear transformations, whereas if they are uncorrelated, *un*correlation will only hold through linear transformations.

<<abs.plots>>=

acf(ts(data = abs(price_yearmn)))
pacf(ts(data = abs(price_yearmn)))

acf(ts(data = abs(oil_sub$r.price[-8403])))
pacf(ts(data = abs(oil_sub$r.price[-8403])))

acf(ts(data = abs(r.price_yearmn[-402])))
pacf(ts(data = abs(r.price_yearmn[-402])))


acf(ts(data = (price_yearmn)^2))
pacf(ts(data = (price_yearmn)^2))

acf(ts(data = (oil_sub$r.price[-8403])^2))
pacf(ts(data = (oil_sub$r.price[-8403])^2))

acf(ts(data = abs(oil_sub$r.price[-8403])))
pacf(ts(data = abs(oil_sub$r.price[-8403])))

acf(ts(data = (r.price_yearmn[-402])^2))
pacf(ts(data = (r.price_yearmn[-402])^2))



McLeod.Li.test(y=price_yearmn, gof.lag=length(price_yearmn))
McLeod.Li.test(y=oil_sub$price, gof.lag=400)

McLeod.Li.test(y=oil_sub$r.price[-8403], gof.lag=400)

@


Box-Ljung/McLeod-Li test

$H_{o}$: no ARCH

$H_{a}$: ARCH

Both the monthly and daily prices as well as the returns suggest strong evidence of ARCH at all lags.

<<norm>>=
qqnorm(price_yearmn, main = "NORMAL Q-Q Monthly Prices")
qqline(price_yearmn, col = "red")

qqnorm(oil_sub$price, main = "NORMAL Q-Q Daily Prices")
qqline(oil_sub$price, col = "red")


qqnorm(log(price_yearmn), main = "NORMAL Q-Q Monthly log(Prices)")
qqline(log(price_yearmn), col = "red")

qqnorm(log(oil_sub$price), main = "NORMAL Q-Q Daily log(Prices)")
qqline(log(oil_sub$price), col = "red")

qqnorm(oil_sub$r.price, main = "NORMAL Q-Q Returns")
qqline(oil_sub$r.price, col = "red")

@

The return($r_{t}$) in financial time series is defined by CC as:

$r_{t} = log(price_{t}) - log(price_{t-1})$

The return is thus define as the ratio of the log prices between two subsequent time points. The return is often then scaled by 100 to make numbers more easily thought about. The ACF and PACF of the returns suggest significant autocorrelations at the 5\% significance level. The ACF and PACF of the absolute value and squared returns both suggest independence is violated. Non-significant autocorrelation and signficiant serial dependence are commmon suggest volatility clustering. Volatility clustering visually is seen when the returns closer together display more similar variability. The Normal Q-Q plot of the returns shows heavy tails. Heavy tailed distributions and volatitlity clustering are common in financial time series data (CC 285). ARCH and GARCH models are used when data display these characteristics. 

Let the conditional variance of the returns, Var($r_{t|t-1}$) = $\sigma_{t|t-1}$. In ARCH modeling, a linear regression model of order q is fit to describe the relationship between the current conditional variance and the previous returns. 

$r_{t} = \sigma_{t|t-q}\epsilon_{t}$

$\sigma^{2}_{t|t-q} = \omega + \Sigma_{i=1:q} \alpha_{i}r^{2}_{t-i}$

such that $\epsilon_{t} \sim (0,1)$ and $\epsilon_{t} \perp r_{t-j}$ for j = 1,2,...

The conditional variance is not observable, and so with a linear transformation, the current squared return can be transformed to be a linear combination of previous squared returns and a random error such that $\r^{2}_{t}$ takes on the form of an AR(q) process.

$\r^{2}_{t} = \omega + \Sigma_{i=1:q} \alpha_{i}r^{2}_{t-i} + \Nu_{t}$

CC (286) show the weak stationarity assumption of AR processes holds for ARCH models, although the volatility clustering results in heavy tails not seen for AR processes with then white noise error terms are assumed to come from a Gaussian distribution. 

ARCH models are used to forcast conditional variances. 


The GARCH(p,q) model is a form of the ARMA(p,q) model such that the current conditional variance is a function of the p previous conditional variances and the q previous returns. Following the $\Nu_{t}$ transformation, the current squared return is written as a function of the max(p,q) previous squared returns and the p previous innovations ($\Nu_{t-p}$) and can be backtransformed to find the currect conditional variance (see CC 294 for the form). The GARCH model also exhibits weak stationarity and innovations from a heavy tailed distribution. However, CC (297) discuss an instance where the GARCH(1,1) model is nonstationary alone.

\section*{Modeling with GARCH}
<<gmodels>>=
g11 <- garch(r.price_yearmn[-402], order = c(1,1))
summary(g11)
AIC(g11)

g22 <- garch(r.price_yearmn[-402], order = c(2,2))
summary(g22)
AIC(g22)

g05 <- garch(r.price_yearmn[-402], order = c(0,5))
summary(g05)
AIC(g05)


g012 <- garch(r.price_yearmn[-402], order = c(0,12))
summary(g012)
AIC(g012)


g11.daily <- garch(oil_sub$r.price[-8403], order = c(1,1))
summary(g11.daily)
AIC(g11.daily)


@

<<checking.assump>>=
hate_t <- oil_sub$r.price/


@






\end{document}
